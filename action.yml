name: "Get full release data"
description: "Get all data from Github release of a given repository"
inputs:
  repository:
    description: "Repository `<org>/<repo>`"
    required: false
    default: ${{ github.repository }}
  token:
    description: "Token for the repository. e.g.: `secrets.GITHUB_TOKEN`"
    required: false
    default: ${{ github.token }}
  version:
    description: "Release version `latest` or `tags/<tag-name>`"
    required: false
    default: "latest"
  body-markdown-file-path:
    description: "Output path for release body content as Markdown file"
    required: false

#outputs:
#  body:
#    description: "`body` output from release"
#    value: ${{ steps.release_data.outputs.body }}

runs:
  using: "composite"
  steps:
    - name: Get Release JSON dataset
      id: json_release_dataset
      shell: bash
      run: |
        token=${{ inputs.token }}

        gh_api_url="https://api.github.com/repos/${{ inputs.repository }}"

        release_json_data=$(curl ${token:+"-H"} ${token:+"Authorization: token ${token}"} \
                    "$gh_api_url/releases/${{ inputs.version }}")

        #body=$(jq -r '.body' <<< "$release_json_data")
        #body_packed_in_json=$(printf '%s' "$body" | jq --raw-input --slurp '.')
        
        packed_data=$(printf '%s' "$release_json_data" | jq --raw-input --slurp '.')
        echo "::set-output name=data::$packed_data"

    - name: Extract content from JSON dataset
      id: release_data
      shell: bash
      run: |
        #echo "${{fromJson(steps.json_release_dataset.outputs.data)}}"
        echo ${{ steps.json_release_dataset.outputs.data }}


    #- name: Export Markdown file
    #  shell: bash
    #  if: ${{ inputs.body-markdown-file-path  != '' }}
    #  run: |
    #    echo "export data to markdown file"
    #    echo "${{ steps.release_data.outputs.body }}"
    #    {
    #      echo '${{ steps.release_data.outputs.body }}'
    #    } >> ${{ inputs.body-markdown-file-path }}