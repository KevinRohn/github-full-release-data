name: "Get full release data"
description: "Get all data from Github release of a given repository"
inputs:
  repository:
    description: "Repository `<org>/<repo>`"
    required: false
    default: ${{ github.repository }}
  token:
    description: "Token for the repository. e.g.: `secrets.GITHUB_TOKEN`"
    required: false
    default: ${{ github.token }}
  version:
    description: "Release version `latest` or `tags/<tag-name>`"
    required: false
    default: "latest"
  body-markdown-file-path:
    description: "Output path for release body content as Markdown file"
    required: false

#outputs:
#  body:
#    description: "`body` output from release"
#    value: ${{ steps.release_data.outputs.body }}

runs:
  using: "composite"
  steps:
    - name: Get release data
      id: json_release_dataset
      shell: bash
      run: |
        echo "::group::Get Release Data"
        token=${{ inputs.token }}

        echo "::stop-commands::`echo -n ${{ inputs.token }} | sha256sum | head -c 64`"
        gh_api_url="https://api.github.com/repos/${{ inputs.repository }}"

        release_json_data=$(curl ${token:+"-H"} ${token:+"Authorization: token ${token}"} \
                    "$gh_api_url/releases/${{ inputs.version }}")

        # See Workaround of multiline outputs for set-output https://github.community/t/set-output-truncates-multiline-strings/16852/9
        body=$(jq -r '.body' <<< "$release_json_data")
        body_packed_in_json=$(printf '%s' "$body" | jq --raw-input --slurp '.')
        
        echo "::`echo -n ${{ github.token }} | sha256sum | head -c 64`::"

        echo "::set-output name=body::$body_packed_in_json"
        
        echo "::endgroup::"
    - name: Write markdown body file
      id: markdown_body
      shell: bash
      if: ${{ inputs.body-markdown-file-path  != '' }}
      run: |
        echo "export data to markdown file"
        {
          echo '${{ fromJSON(steps.json_release_dataset.outputs.body) }}'
        } >> ${{ inputs.body-markdown-file-path }}